package org.me.musicscalegenerator;

import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.SwingWorker;

/**
 *
 * @author Luke
 */
public class GUI extends javax.swing.JFrame {
    /**
     * Creates new form NewJFrame
     */
    public GUI() {
        initComponents();
        setIcon();
        waitLabel.setVisible(false);
        
        //initialize visibility of components
        ResetKeyGuiElements();
        
        //play intro melody on startup
        PlayIntro();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scaleOrChord = new javax.swing.ButtonGroup();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel_Eb3_GLOW = new javax.swing.JLabel();
        jLabel_Db3_GLOW = new javax.swing.JLabel();
        jLabel_Gb3_GLOW = new javax.swing.JLabel();
        jLabel_Ab3_GLOW = new javax.swing.JLabel();
        jLabel_Bb3_GLOW = new javax.swing.JLabel();
        jLabel_Db4_GLOW = new javax.swing.JLabel();
        jLabel_Eb4_GLOW = new javax.swing.JLabel();
        jLabel_Gb4_GLOW = new javax.swing.JLabel();
        jLabel_Ab4_GLOW = new javax.swing.JLabel();
        jLabel_Bb4_GLOW = new javax.swing.JLabel();
        jLabel_C3_GLOW = new javax.swing.JLabel();
        jLabel_D3_GLOW = new javax.swing.JLabel();
        jLabel_E3_GLOW = new javax.swing.JLabel();
        jLabel_F3_GLOW = new javax.swing.JLabel();
        jLabel_G3_GLOW = new javax.swing.JLabel();
        jLabel_A3_GLOW = new javax.swing.JLabel();
        jLabel_B3_GLOW = new javax.swing.JLabel();
        jLabel_C4_GLOW = new javax.swing.JLabel();
        jLabel_D4_GLOW = new javax.swing.JLabel();
        jLabel_E4_GLOW = new javax.swing.JLabel();
        jLabel_F4_GLOW = new javax.swing.JLabel();
        jLabel_G4_GLOW = new javax.swing.JLabel();
        jLabel_A4_GLOW = new javax.swing.JLabel();
        jLabel_B4_GLOW = new javax.swing.JLabel();
        jLabel_ErrorMsg = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jComboBox_Key = new javax.swing.JComboBox<>();
        jComboBox_Scale = new javax.swing.JComboBox<>();
        Generate_Scale = new javax.swing.JButton();
        jButton_CLEAR = new javax.swing.JButton();
        jButton_G3 = new javax.swing.JButton();
        jButton_E3 = new javax.swing.JButton();
        jButton_F3 = new javax.swing.JButton();
        jButton_D3 = new javax.swing.JButton();
        jButton_C3 = new javax.swing.JButton();
        jButton_A3 = new javax.swing.JButton();
        jButton_B3 = new javax.swing.JButton();
        jButton_C4 = new javax.swing.JButton();
        jButton_E4 = new javax.swing.JButton();
        jButton_D4 = new javax.swing.JButton();
        jButton_A4 = new javax.swing.JButton();
        jButton_G4 = new javax.swing.JButton();
        jButton_F4 = new javax.swing.JButton();
        jButton_B4 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        Chord = new javax.swing.JComboBox<>();
        Generate_Chord = new javax.swing.JButton();
        ClearChords = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        waitLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton_Db3 = new javax.swing.JButton();
        jButton_Eb3 = new javax.swing.JButton();
        jButton_Gb3 = new javax.swing.JButton();
        jButton_Ab3 = new javax.swing.JButton();
        jButton_Bb3 = new javax.swing.JButton();
        jButton_Db4 = new javax.swing.JButton();
        jButton_Eb4 = new javax.swing.JButton();
        jButton_Gb4 = new javax.swing.JButton();
        jButton_Ab4 = new javax.swing.JButton();
        jButton_Bb4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel_NoteLabel_1 = new javax.swing.JLabel();
        jLabel_NoteLabel_2 = new javax.swing.JLabel();
        jLabel_NoteLabel_3 = new javax.swing.JLabel();
        jLabel_NoteLabel_4 = new javax.swing.JLabel();
        jLabel_NoteLabel_5 = new javax.swing.JLabel();
        jLabel_NoteLabel_6 = new javax.swing.JLabel();
        jLabel_NoteLabel_7 = new javax.swing.JLabel();
        jLabel_NoteLabel_8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Music Scale Generator");
        setBounds(new java.awt.Rectangle(0, 0, 575, 395));
        setForeground(new java.awt.Color(0, 255, 255));
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(575, 395));
        setResizable(false);
        setSize(new java.awt.Dimension(575, 395));

        jLayeredPane2.setMaximumSize(new java.awt.Dimension(575, 395));
        jLayeredPane2.setMinimumSize(new java.awt.Dimension(575, 395));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/background.png"))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/piano.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 0, 0)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setMaximumSize(new java.awt.Dimension(575, 375));
        jPanel1.setMinimumSize(new java.awt.Dimension(575, 375));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(575, 375));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_Eb3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/blackGlow.png"))); // NOI18N
        jPanel1.add(jLabel_Eb3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 265, -1, -1));

        jLabel_Db3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/blackGlow.png"))); // NOI18N
        jPanel1.add(jLabel_Db3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 265, -1, -1));

        jLabel_Gb3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/blackGlow.png"))); // NOI18N
        jPanel1.add(jLabel_Gb3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 265, -1, -1));

        jLabel_Ab3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/blackGlow.png"))); // NOI18N
        jPanel1.add(jLabel_Ab3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 265, -1, -1));

        jLabel_Bb3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/blackGlow.png"))); // NOI18N
        jPanel1.add(jLabel_Bb3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 265, -1, -1));

        jLabel_Db4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/blackGlow.png"))); // NOI18N
        jPanel1.add(jLabel_Db4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(319, 265, -1, -1));

        jLabel_Eb4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/blackGlow.png"))); // NOI18N
        jPanel1.add(jLabel_Eb4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 265, -1, -1));

        jLabel_Gb4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/blackGlow.png"))); // NOI18N
        jPanel1.add(jLabel_Gb4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 265, -1, -1));

        jLabel_Ab4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/blackGlow.png"))); // NOI18N
        jPanel1.add(jLabel_Ab4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(483, 265, -1, -1));

        jLabel_Bb4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/blackGlow.png"))); // NOI18N
        jPanel1.add(jLabel_Bb4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(524, 265, -1, -1));

        jLabel_C3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_C3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 342, -1, -1));

        jLabel_D3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_D3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 342, -1, -1));

        jLabel_E3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_E3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 342, -1, -1));

        jLabel_F3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_F3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 342, -1, -1));

        jLabel_G3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_G3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 342, -1, -1));

        jLabel_A3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_A3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 342, -1, -1));

        jLabel_B3_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_B3_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(261, 342, -1, -1));

        jLabel_C4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_C4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(302, 342, -1, -1));

        jLabel_D4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_D4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(343, 342, -1, -1));

        jLabel_E4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_E4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(384, 342, -1, -1));

        jLabel_F4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_F4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 342, -1, -1));

        jLabel_G4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_G4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(466, 342, -1, -1));

        jLabel_A4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_A4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(507, 342, -1, -1));

        jLabel_B4_GLOW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/whiteGlow.png"))); // NOI18N
        jPanel1.add(jLabel_B4_GLOW, new org.netbeans.lib.awtextra.AbsoluteConstraints(548, 342, -1, -1));

        jLabel_ErrorMsg.setFont(new java.awt.Font("Segoe Script", 1, 10)); // NOI18N
        jLabel_ErrorMsg.setForeground(new java.awt.Color(211, 211, 211));
        jPanel1.add(jLabel_ErrorMsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 179, 140, 50));

        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.setMaximumSize(new java.awt.Dimension(575, 395));
        jPanel3.setMinimumSize(new java.awt.Dimension(575, 395));
        jPanel3.setOpaque(false);
        jPanel3.setPreferredSize(new java.awt.Dimension(575, 395));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox_Key.setBackground(new java.awt.Color(117, 40, 7));
        jComboBox_Key.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jComboBox_Key.setMaximumRowCount(4);
        jComboBox_Key.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Key", "A", "Ab", "A#", "B", "Bb", "B#", "C", "Cb", "C#", "D", "Db", "D#", "E", "Eb", "E#", "F", "Fb", "F#", "G", "Gb", "G#" }));
        jComboBox_Key.setToolTipText("");
        jComboBox_Key.setFocusCycleRoot(true);
        jComboBox_Key.setNextFocusableComponent(jComboBox_Scale);
        jPanel3.add(jComboBox_Key, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, -1));

        jComboBox_Scale.setBackground(new java.awt.Color(117, 40, 7));
        jComboBox_Scale.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jComboBox_Scale.setMaximumRowCount(4);
        jComboBox_Scale.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scale", "Ionian (Major)", "Dorian", "Phrygian", "Lydian", "Mixolydian", "Aeolian (Minor)", "Locrian", "Harmonic Minor", "Melodic Minor" }));
        jComboBox_Scale.setNextFocusableComponent(Generate_Scale);
        jPanel3.add(jComboBox_Scale, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 0, -1, -1));

        Generate_Scale.setBackground(new java.awt.Color(198, 124, 12));
        Generate_Scale.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        Generate_Scale.setText("Generate");
        Generate_Scale.setNextFocusableComponent(jButton_CLEAR);
        Generate_Scale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Generate_ScaleActionPerformed(evt);
            }
        });
        jPanel3.add(Generate_Scale, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 4, -1, 36));

        jButton_CLEAR.setBackground(new java.awt.Color(211, 211, 211));
        jButton_CLEAR.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jButton_CLEAR.setText("Clear");
        jButton_CLEAR.setNextFocusableComponent(jRadioButton1);
        jButton_CLEAR.setPreferredSize(new java.awt.Dimension(87, 36));
        jButton_CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CLEARActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_CLEAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 4, 82, -1));

        jButton_G3.setToolTipText("");
        jButton_G3.setBorderPainted(false);
        jButton_G3.setContentAreaFilled(false);
        jButton_G3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_G3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_G3, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 321, 41, 74));

        jButton_E3.setToolTipText("");
        jButton_E3.setBorderPainted(false);
        jButton_E3.setContentAreaFilled(false);
        jButton_E3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_E3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_E3, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 321, 41, 74));

        jButton_F3.setToolTipText("");
        jButton_F3.setBorderPainted(false);
        jButton_F3.setContentAreaFilled(false);
        jButton_F3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_F3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_F3, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 321, 41, 74));

        jButton_D3.setToolTipText("");
        jButton_D3.setBorderPainted(false);
        jButton_D3.setContentAreaFilled(false);
        jButton_D3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_D3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_D3, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 321, 41, 74));

        jButton_C3.setToolTipText("");
        jButton_C3.setBorderPainted(false);
        jButton_C3.setContentAreaFilled(false);
        jButton_C3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_C3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_C3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 321, 41, 74));

        jButton_A3.setToolTipText("");
        jButton_A3.setBorderPainted(false);
        jButton_A3.setContentAreaFilled(false);
        jButton_A3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_A3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_A3, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 321, 41, 74));

        jButton_B3.setToolTipText("");
        jButton_B3.setBorderPainted(false);
        jButton_B3.setContentAreaFilled(false);
        jButton_B3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_B3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_B3, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 321, 41, 74));

        jButton_C4.setToolTipText("");
        jButton_C4.setBorderPainted(false);
        jButton_C4.setContentAreaFilled(false);
        jButton_C4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_C4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_C4, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 321, 41, 74));

        jButton_E4.setToolTipText("");
        jButton_E4.setBorderPainted(false);
        jButton_E4.setContentAreaFilled(false);
        jButton_E4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_E4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_E4, new org.netbeans.lib.awtextra.AbsoluteConstraints(369, 321, 41, 74));

        jButton_D4.setToolTipText("");
        jButton_D4.setBorderPainted(false);
        jButton_D4.setContentAreaFilled(false);
        jButton_D4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_D4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_D4, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 321, 41, 74));

        jButton_A4.setToolTipText("");
        jButton_A4.setBorderPainted(false);
        jButton_A4.setContentAreaFilled(false);
        jButton_A4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_A4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_A4, new org.netbeans.lib.awtextra.AbsoluteConstraints(492, 321, 41, 74));

        jButton_G4.setToolTipText("");
        jButton_G4.setBorderPainted(false);
        jButton_G4.setContentAreaFilled(false);
        jButton_G4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_G4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_G4, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 321, 41, 74));

        jButton_F4.setToolTipText("");
        jButton_F4.setBorderPainted(false);
        jButton_F4.setContentAreaFilled(false);
        jButton_F4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_F4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_F4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 321, 41, 74));

        jButton_B4.setToolTipText("");
        jButton_B4.setBorderPainted(false);
        jButton_B4.setContentAreaFilled(false);
        jButton_B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_B4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton_B4, new org.netbeans.lib.awtextra.AbsoluteConstraints(533, 321, 47, 74));

        jRadioButton1.setBackground(null);
        scaleOrChord.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(218, 120, 28));
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Scales");
        jRadioButton1.setNextFocusableComponent(jRadioButton2);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 0, -1, -1));

        jRadioButton2.setBackground(null);
        scaleOrChord.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(218, 120, 28));
        jRadioButton2.setText("Chords");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(496, 20, -1, -1));

        Chord.setBackground(new java.awt.Color(117, 40, 7));
        Chord.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        Chord.setMaximumRowCount(4);
        Chord.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chord", "Major", "Minor", "7th", "Major 7th", "Minor 7th", "Minor 7 Flat 5", "6th", "Minor 6th", "Diminished", "Diminished 7th", "Augmented", "7th Sharp 5th", "Suspended 4th", "Suspended 2nd", "5th" }));
        jPanel3.add(Chord, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 0, 180, -1));

        Generate_Chord.setBackground(new java.awt.Color(198, 124, 12));
        Generate_Chord.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        Generate_Chord.setText("Generate");
        Generate_Chord.setMaximumSize(new java.awt.Dimension(82, 36));
        Generate_Chord.setMinimumSize(new java.awt.Dimension(82, 36));
        Generate_Chord.setPreferredSize(new java.awt.Dimension(82, 36));
        Generate_Chord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Generate_ChordActionPerformed(evt);
            }
        });
        jPanel3.add(Generate_Chord, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 4, -1, -1));

        ClearChords.setBackground(new java.awt.Color(211, 211, 211));
        ClearChords.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        ClearChords.setText("Clear");
        ClearChords.setMaximumSize(new java.awt.Dimension(82, 36));
        ClearChords.setMinimumSize(new java.awt.Dimension(82, 36));
        ClearChords.setPreferredSize(new java.awt.Dimension(82, 36));
        ClearChords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CLEARActionPerformed(evt);
            }
        });
        jPanel3.add(ClearChords, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 4, -1, -1));

        jToggleButton1.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/musicscalegenerator/images/Ascending.png"))); // NOI18N
        jToggleButton1.setBorderPainted(false);
        jToggleButton1.setContentAreaFilled(false);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, 60, 60));

        waitLabel.setFont(new java.awt.Font("Segoe Script", 1, 12)); // NOI18N
        waitLabel.setForeground(new java.awt.Color(231, 231, 231));
        waitLabel.setText("Please wait - building scale...");
        jPanel3.add(waitLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, -1, -1));

        jPanel4.setMaximumSize(new java.awt.Dimension(575, 395));
        jPanel4.setMinimumSize(new java.awt.Dimension(575, 395));
        jPanel4.setOpaque(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(575, 395));

        jButton_Db3.setBorderPainted(false);
        jButton_Db3.setContentAreaFilled(false);
        jButton_Db3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Db3ActionPerformed(evt);
            }
        });

        jButton_Eb3.setBorderPainted(false);
        jButton_Eb3.setContentAreaFilled(false);
        jButton_Eb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Eb3ActionPerformed(evt);
            }
        });

        jButton_Gb3.setBorderPainted(false);
        jButton_Gb3.setContentAreaFilled(false);
        jButton_Gb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Gb3ActionPerformed(evt);
            }
        });

        jButton_Ab3.setBorderPainted(false);
        jButton_Ab3.setContentAreaFilled(false);
        jButton_Ab3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Ab3ActionPerformed(evt);
            }
        });

        jButton_Bb3.setBorderPainted(false);
        jButton_Bb3.setContentAreaFilled(false);
        jButton_Bb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Bb3ActionPerformed(evt);
            }
        });

        jButton_Db4.setBorderPainted(false);
        jButton_Db4.setContentAreaFilled(false);
        jButton_Db4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Db4ActionPerformed(evt);
            }
        });

        jButton_Eb4.setBorderPainted(false);
        jButton_Eb4.setContentAreaFilled(false);
        jButton_Eb4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Eb4ActionPerformed(evt);
            }
        });

        jButton_Gb4.setBorderPainted(false);
        jButton_Gb4.setContentAreaFilled(false);
        jButton_Gb4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Gb4ActionPerformed(evt);
            }
        });

        jButton_Ab4.setBorderPainted(false);
        jButton_Ab4.setContentAreaFilled(false);
        jButton_Ab4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Ab4ActionPerformed(evt);
            }
        });

        jButton_Bb4.setBorderPainted(false);
        jButton_Bb4.setContentAreaFilled(false);
        jButton_Bb4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Bb4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jButton_Db3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_Eb3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jButton_Gb3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jButton_Ab3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_Bb3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jButton_Db4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jButton_Eb4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jButton_Gb4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_Ab4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_Bb4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(220, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton_Ab4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Gb4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Eb4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Db4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Bb3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Ab3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Gb3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Eb3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton_Db3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_Bb4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );

        jPanel5.setMaximumSize(new java.awt.Dimension(575, 395));
        jPanel5.setMinimumSize(new java.awt.Dimension(575, 395));
        jPanel5.setName(""); // NOI18N
        jPanel5.setOpaque(false);
        jPanel5.setPreferredSize(new java.awt.Dimension(575, 395));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_NoteLabel_1.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        jLabel_NoteLabel_1.setForeground(new java.awt.Color(198, 124, 12));
        jPanel5.add(jLabel_NoteLabel_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        jLabel_NoteLabel_2.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        jLabel_NoteLabel_2.setForeground(new java.awt.Color(198, 124, 12));
        jPanel5.add(jLabel_NoteLabel_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, -1, -1));

        jLabel_NoteLabel_3.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        jLabel_NoteLabel_3.setForeground(new java.awt.Color(198, 124, 12));
        jPanel5.add(jLabel_NoteLabel_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, -1, -1));

        jLabel_NoteLabel_4.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        jLabel_NoteLabel_4.setForeground(new java.awt.Color(198, 124, 12));
        jPanel5.add(jLabel_NoteLabel_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, -1, -1));

        jLabel_NoteLabel_5.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        jLabel_NoteLabel_5.setForeground(new java.awt.Color(198, 124, 12));
        jPanel5.add(jLabel_NoteLabel_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, -1, -1));

        jLabel_NoteLabel_6.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        jLabel_NoteLabel_6.setForeground(new java.awt.Color(198, 124, 12));
        jPanel5.add(jLabel_NoteLabel_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, -1, -1));

        jLabel_NoteLabel_7.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        jLabel_NoteLabel_7.setForeground(new java.awt.Color(198, 124, 12));
        jPanel5.add(jLabel_NoteLabel_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, -1, -1));

        jLabel_NoteLabel_8.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        jLabel_NoteLabel_8.setForeground(new java.awt.Color(198, 124, 12));
        jPanel5.add(jLabel_NoteLabel_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 180, -1, -1));

        jLayeredPane2.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jPanel1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jLayeredPane2.setLayer(jPanel3, javax.swing.JLayeredPane.DRAG_LAYER);
        jLayeredPane2.setLayer(jPanel4, javax.swing.JLayeredPane.POPUP_LAYER);
        jLayeredPane2.setLayer(jPanel5, javax.swing.JLayeredPane.DRAG_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Generate_ScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Generate_ScaleActionPerformed
        //clear the screen from any previous executions
        ResetKeyGuiElements();
        
        //error messages if comboboxes are not filled
        if (jComboBox_Key.getSelectedIndex() == 0){
            jLabel_ErrorMsg.setText("*Please select a key.");
            return;
        }
        else if (jComboBox_Scale.getSelectedIndex() == 0){   
            jLabel_ErrorMsg.setText("*Please select a scale type."); 
            return;
        }
        
        //disable the buttons while the scale is built to prevent messing up
        //the screen in the middle of building
        jButton_CLEAR.setEnabled(false); 
        Generate_Scale.setEnabled(false);
        jRadioButton1.setEnabled(false);
        jRadioButton2.setEnabled(false);
        jToggleButton1.setEnabled(false);
        jComboBox_Key.setEnabled(false);
        jComboBox_Scale.setEnabled(false);
        waitLabel.setVisible(true);
        
        
        //store the value of the selected items in the comboboxes to be used
        //as arguments to the ScaleGenerator
        ScaleGenerator scaleGen = new ScaleGenerator();
        String key = String.valueOf(jComboBox_Key.getSelectedItem());
        String scaleType = String.valueOf(jComboBox_Scale.getSelectedItem());
        String steps = scaleGen.setScaleType(scaleType);
        
        //use the ScaleGenerator's methods to build and store an arraylist with 
        //all the correct note names
        ArrayList<String> scale = scaleGen.getFinalScale(scaleGen.getAccidentals
        (steps, scaleGen.buildScale(key)));
        
        //fill the noteObjs, an arraylist of Notes that can be referenced to 
        //play note sounds and light up note keys
        initializeNotes();
        
        //figure out where in the noteObjs list to start from
        int startIndex = getStartIndex(scale.get(0));
        
        if (isDescending)
            steps = new StringBuffer(steps).reverse().toString();
             
        lightUpNotes(scale, startIndex, steps);  
        
    }//GEN-LAST:event_Generate_ScaleActionPerformed
   
    //display the 'glow' icon on the piano keys that correspond to the notes
    //in the scale as they are played
    public void lightUpNotes(ArrayList<String> scale, int startIndex, 
            String steps){
        
        
        //SwingWorker is abstract class that creates a new dedicated thread.
        //multi-threading is necessary here in order to update the GUI in real 
        //time as the notes are played. Otherwise, the screen freezes up.
            SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>()
            {
                    @Override
                protected Void doInBackground() throws Exception 
                {
                    int noteIndex;
                    int myStart = startIndex;
                    
                    if (isDescending)
                        myStart += 12;
                    
                    
                    
                    //for each note in the scale...
                    
                    for (int notePosition = 0; notePosition < 7; notePosition++)
                    {
                        //index must be referenced this way because it is in 
                        //a thread inside the class
                        noteIndex = myStart;
                        
                        //display the note name on the screen
                        updateNotes(notePosition, noteIndex, scale);
                        
                        //move to next note
                        
                        if (isDescending){
                            myStart -= Integer.parseInt(Character.toString
                                (steps.charAt(notePosition)));
                        }
                        else{
                            myStart += Integer.parseInt(Character.toString
                                (steps.charAt(notePosition)));
                        }
                        
                         
                        //the name of the last note is the same as the first
               
                        if(notePosition == 6)
                            updateNotes(7, myStart, scale);
                        
                     
                            
                    }
                    
                    //enable the buttons after scale is built
                    jButton_CLEAR.setEnabled(true);
                    Generate_Scale.setEnabled(true);
                    jRadioButton1.setEnabled(true);
                    jRadioButton2.setEnabled(true);
                    jToggleButton1.setEnabled(true);
                    jComboBox_Key.setEnabled(true);
                    jComboBox_Scale.setEnabled(true);
                    waitLabel.setVisible(false);
                        
                    return null;
                }
            };
            
            worker.execute();
        
    }
    
    //display the current note in the scale on the correct jLabel
    private void updateNotes(final int notePosition, final int startIndex, 
            final ArrayList<String> scale){
        
                noteObjs.get(startIndex).highlightNote(true);
                
                noteObjs.get(startIndex).playNote();
                
                
                    if (isDescending){
                        if (notePosition == 0)  
                        jLabel_NoteLabel_8.setText(scale.get(0));
                    else if (notePosition == 1)
                        jLabel_NoteLabel_7.setText(scale.get(6));
                    else if (notePosition == 2)
                        jLabel_NoteLabel_6.setText(scale.get(5));
                    else if (notePosition == 3)
                        jLabel_NoteLabel_5.setText(scale.get(4));
                    else if (notePosition == 4)
                        jLabel_NoteLabel_4.setText(scale.get(3));
                    else if (notePosition == 5)
                        jLabel_NoteLabel_3.setText(scale.get(2));
                    else if (notePosition == 6)
                        jLabel_NoteLabel_2.setText(scale.get(1));
                    else if (notePosition == 7)
                        jLabel_NoteLabel_1.setText(scale.get(0));
                    }
                    else{
                        if (notePosition == 0)  
                            jLabel_NoteLabel_1.setText(scale.get(0));
                        else if (notePosition == 1)
                            jLabel_NoteLabel_2.setText(scale.get(1));
                        else if (notePosition == 2)
                            jLabel_NoteLabel_3.setText(scale.get(2));
                        else if (notePosition == 3)
                            jLabel_NoteLabel_4.setText(scale.get(3));
                        else if (notePosition == 4)
                            jLabel_NoteLabel_5.setText(scale.get(4));
                        else if (notePosition == 5)
                            jLabel_NoteLabel_6.setText(scale.get(5));
                        else if (notePosition == 6)
                            jLabel_NoteLabel_7.setText(scale.get(6));
                        else if (notePosition == 7)
                            jLabel_NoteLabel_8.setText(scale.get(0));
                    }
                    
                
                
                try{
                    //pause before doing this for the next note
                    Thread.sleep(550);
                }
                catch (InterruptedException e){
                }

    }
    
    public void PlayIntro() //plays melody on program startup to prime audio 
    {
        class NotesAndDelays
        {
            public String note;
            public int delay;
            public NotesAndDelays(String n, int d)
            {
                note = n;
                delay = d;
            }
        }
        
        //make a list of intro notes that know their sound file and delay 
        ArrayList<NotesAndDelays> introFiles = new ArrayList<>();
        
        introFiles.add(new NotesAndDelays("G3.wav", 400));
        introFiles.add(new NotesAndDelays("G3.wav", 200));
        introFiles.add(new NotesAndDelays("C4.wav", 100));
        introFiles.add(new NotesAndDelays("E4.wav", 100));
        introFiles.add(new NotesAndDelays("G4.wav", 300));
        introFiles.add(new NotesAndDelays("E4.wav", 100));
        introFiles.add(new NotesAndDelays("G4.wav", 100));

        //counter for a for loop
        int numNotes = introFiles.size();
        
        for (int index=0; index<numNotes; index++)
        {
            try{
                //play the note
                new SoundPlayer(introFiles.get(index).note);
                //pause before playing the next note
                Thread.sleep(introFiles.get(index).delay);
            }
            catch (Exception e){
            }

        }
    }
    
    public int getStartIndex(String firstNote){
        //get starting index of noteObjs associated with each possible note name
        switch (firstNote){
            case ("C "):
            case ("B#"):
            case ("Dbb"):
                return 0;
            case ("Db"):
            case ("C#"):
            case ("B##"):
                return 1;
            case ("D "):
            case ("C##"):
            case ("Ebb"):
                return 2;
            case ("Eb"):
            case ("D#"):
            case ("Fbb"):
                return 3;
            case ("E "):
            case ("Fb"):
            case ("D##"):
                return 4;
            case ("F "):
            case ("E#"):
            case ("Gbb"):
                return 5;
            case ("F#"):
            case ("E##"):
            case ("Gb"):
                return 6;
            case ("G "):
            case ("F##"):
            case ("Abb"):
                return 7;
            case ("Ab"):
            case ("G#"):
                return 8;
            case ("A "):
            case ("G##"):
            case ("Bbb"):
                return 9;
            case ("Bb"):
            case ("Cbb"):
            case ("A#"):
                return 10;
            case ("B "):
            case ("A##"):
            case ("Cb"):
                return 11;
            default:
                return 0;
        }  
    }
   
    private void jButton_CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CLEARActionPerformed
        
        ResetKeyGuiElements();
        
        //reset the comboboxes
        jComboBox_Key.setSelectedIndex(0);
        jComboBox_Scale.setSelectedIndex(0);
        Chord.setSelectedIndex(0);

    }//GEN-LAST:event_jButton_CLEARActionPerformed

    // Clear the note displays, un-highlight all keys
    private void ResetKeyGuiElements()
    {
        // Reset note displays
        jLabel_NoteLabel_1.setText(null);
        jLabel_NoteLabel_2.setText(null);
        jLabel_NoteLabel_3.setText(null);
        jLabel_NoteLabel_4.setText(null);
        jLabel_NoteLabel_5.setText(null);
        jLabel_NoteLabel_6.setText(null);
        jLabel_NoteLabel_7.setText(null);
        jLabel_NoteLabel_8.setText(null);
        
        jLabel_ErrorMsg.setText(null);
        
        // Un-highlight all keys
        jLabel_Gb4_GLOW.setVisible(false);
        jLabel_Eb3_GLOW.setVisible(false);
        jLabel_Db3_GLOW.setVisible(false);
        jLabel_Gb3_GLOW.setVisible(false);
        jLabel_Bb3_GLOW.setVisible(false);
        jLabel_Ab3_GLOW.setVisible(false);
        jLabel_Db4_GLOW.setVisible(false);
        jLabel_Eb4_GLOW.setVisible(false);
        jLabel_Ab4_GLOW.setVisible(false);
        jLabel_Bb4_GLOW.setVisible(false);
        jLabel_C3_GLOW.setVisible(false);
        jLabel_D3_GLOW.setVisible(false);
        jLabel_E3_GLOW.setVisible(false);
        jLabel_F3_GLOW.setVisible(false);
        jLabel_G3_GLOW.setVisible(false);
        jLabel_A3_GLOW.setVisible(false);
        jLabel_B3_GLOW.setVisible(false);
        jLabel_D4_GLOW.setVisible(false);
        jLabel_E4_GLOW.setVisible(false);
        jLabel_A4_GLOW.setVisible(false);
        jLabel_B4_GLOW.setVisible(false);
        jLabel_F4_GLOW.setVisible(false);
        jLabel_C4_GLOW.setVisible(false);
        jLabel_G4_GLOW.setVisible(false);
        
    }
    //all of the sounds to be played when piano keys are pushed 
    private void jButton_C3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_C3ActionPerformed
        try{
            new SoundPlayer("C3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_C3ActionPerformed

    private void jButton_D3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_D3ActionPerformed
        try{
            new SoundPlayer("D3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_D3ActionPerformed

    private void jButton_E3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_E3ActionPerformed
        try{
            new SoundPlayer("E3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_E3ActionPerformed

    private void jButton_F3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_F3ActionPerformed
        try{
            new SoundPlayer("F3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_F3ActionPerformed

    private void jButton_G3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_G3ActionPerformed
        try{
            new SoundPlayer("G3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_G3ActionPerformed

    private void jButton_A3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_A3ActionPerformed
        try{
            new SoundPlayer("A3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_A3ActionPerformed

    private void jButton_B3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_B3ActionPerformed
        try{
            new SoundPlayer("B3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_B3ActionPerformed

    private void jButton_C4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_C4ActionPerformed
        try{
            new SoundPlayer("C4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_C4ActionPerformed

    private void jButton_D4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_D4ActionPerformed
        try{
            new SoundPlayer("D4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_D4ActionPerformed

    private void jButton_E4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_E4ActionPerformed
        try{
            new SoundPlayer("E4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_E4ActionPerformed

    private void jButton_F4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_F4ActionPerformed
        try{
            new SoundPlayer("F4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_F4ActionPerformed

    private void jButton_G4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_G4ActionPerformed
        try{
            new SoundPlayer("G4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_G4ActionPerformed

    private void jButton_A4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_A4ActionPerformed
        try{
            new SoundPlayer("A4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_A4ActionPerformed

    private void jButton_B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_B4ActionPerformed
        try{
            new SoundPlayer("B4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_B4ActionPerformed

    private void jButton_Db3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Db3ActionPerformed
        try{
            new SoundPlayer("Db3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_Db3ActionPerformed

    private void jButton_Eb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Eb3ActionPerformed
        try{
            new SoundPlayer("Eb3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_Eb3ActionPerformed

    private void jButton_Gb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Gb3ActionPerformed
        try{
            new SoundPlayer("Gb3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_Gb3ActionPerformed

    private void jButton_Ab3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Ab3ActionPerformed
        try{
            new SoundPlayer("Ab3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_Ab3ActionPerformed

    private void jButton_Bb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Bb3ActionPerformed
        try{
            new SoundPlayer("Bb3.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_Bb3ActionPerformed

    private void jButton_Db4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Db4ActionPerformed
        try{
            new SoundPlayer("Db4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_Db4ActionPerformed

    private void jButton_Eb4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Eb4ActionPerformed
        try{
            new SoundPlayer("Eb4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_Eb4ActionPerformed

    private void jButton_Gb4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Gb4ActionPerformed
        try{
            new SoundPlayer("Gb4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_Gb4ActionPerformed

    private void jButton_Ab4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Ab4ActionPerformed
        try{
            new SoundPlayer("Ab4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_Ab4ActionPerformed

    private void jButton_Bb4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Bb4ActionPerformed
        try{
            new SoundPlayer("Bb4.wav");
        }
        catch(Exception e){    
        }
    }//GEN-LAST:event_jButton_Bb4ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        
        jComboBox_Scale.setVisible(true);
        Generate_Scale.setVisible(true);
        Generate_Chord.setVisible(false);
        jButton_CLEAR.setVisible(true);
        jToggleButton1.setVisible(true);
        
        ResetKeyGuiElements();
        
        jComboBox_Key.setSelectedItem("Key");
        jComboBox_Scale.setSelectedItem("Scale");
          
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
       
        jComboBox_Scale.setVisible(false);
        Generate_Scale.setVisible(false);
        Generate_Chord.setVisible(true);
        jButton_CLEAR.setVisible(false);
        jToggleButton1.setVisible(false);
        ResetKeyGuiElements();
        
        jComboBox_Key.setSelectedItem("Key");
        Chord.setSelectedItem("Chord");
        
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void Generate_ChordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Generate_ChordActionPerformed
        
        ResetKeyGuiElements();
        
        //error messages if a parameter is not selected
        if (jComboBox_Key.getSelectedIndex() == 0){
            jLabel_ErrorMsg.setText("*Please select a key.");
            return;
        }
        else if (Chord.getSelectedIndex() == 0){
            jLabel_ErrorMsg.setText("*Please select a chord.");
            return;
        }
        
        //ChordGenerator extends ScaleGenerator with a few added method for 
        //extracting specific notes from the generated scale
        ChordGenerator chordGen = new ChordGenerator();
        
        //store starting key
        String key = String.valueOf(jComboBox_Key.getSelectedItem());
        
        //if a natural note is picked, add a space to it
        if (key.length() == 1)
            key = key.concat(" ");
        
        //build the scale to pick notes from
        ArrayList<String> tempChordScale = 
                chordGen.buildScale(key);
        
        tempChordScale.set(0, key);
        
        ArrayList<String> chordScale = 
                chordGen.getFinalScale(chordGen.getAccidentals
                ("2212221", tempChordScale));
        
        //returns a string with digits representing the distances between notes
        //in the chord
        String chordFormula = getChordFormula();
        
        //extracts the necessary notes from the first array of note names
        ArrayList<String> chordNotes = 
                chordGen.extractChordNotes(chordScale, chordFormula);
        
        //gets correct starting index for noteObjs
        int startIndex = getStartIndex(key);
       
        //uses he chord formula to index through noteObjs so the right keys
        //will light up and play
        ArrayList<String> noteIndexes = 
                chordGen.getChordNoteIndexes(startIndex, chordFormula);
        
        //sets up the noteObjs with their glow labels and sounds
        initializeNotes();
        
        //play and light up the notes
        playChordNotes(noteIndexes);
        
        //display the note names
        displayChordNotes(chordNotes);
      
    }//GEN-LAST:event_Generate_ChordActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        isDescending = !(isDescending);
        
        ResetKeyGuiElements();
        
        
               
        BufferedImage img;
        
            try{  
                
                if(isDescending){
                     img = ImageIO.read(getClass().getResource(
                        "/org/me/musicscalegenerator/images/Descending.png"));
                }
                else{
                     img = ImageIO.read(getClass().getResource(
                        "/org/me/musicscalegenerator/images/Ascending.png"));
                     
                }
                
                ImageIcon icon = new ImageIcon(img);
                jToggleButton1.setIcon(icon);
              
            }
            catch(IOException e){
                System.out.println("Error - specified image cannot be found.");
            }
            
    }//GEN-LAST:event_jToggleButton1ActionPerformed
    //dislpay notes on corresponding jLabel based on note position 
    public void displayChordNotes(ArrayList<String> notes){
        jLabel_NoteLabel_3.setText(notes.get(0));
        jLabel_NoteLabel_5.setText(notes.get(1));
        if (notes.size() > 2)
            jLabel_NoteLabel_7.setText(notes.get(2));
        if (notes.size() > 3)
            jLabel_NoteLabel_8.setText(notes.get(3));
    }
    
    //creates multiple SwingWorker objects to play sounds simultaneously
    public void playChordNotes(ArrayList<String> indexes){
        
        ArrayList<String> files = new ArrayList<>();
        
        //for each note to be played...
        for (int i = 0; i < indexes.size(); i++){
            //fill list of sound files for notes
            files.add(i, soundFiles.get(Integer.parseInt(indexes.get(i))));
        }
        
        //new SwingWorker for dedicated thread
        ArrayList<SwingWorker> workers = new ArrayList<>();
        
        for (int i = 0; i < indexes.size(); i++){
            int index = i;
            workers.add(i, new SwingWorker<Void, Void>(){
          
                @Override
                protected Void doInBackground() throws Exception{
                    
                 //play the sound   
                new SoundPlayer(files.get(index));
                       
                    return null;
                }
            });
        }
        //execute the threads 
        for (int i = 0; i < workers.size(); i++)
            workers.get(i).execute();
       //light up the keys 
       for (int i = 0; i < indexes.size(); i++){
            noteObjs.get(Integer.parseInt(indexes.get(i))).highlightNote(true);
       }
     
    }
    
    //return value represents semitone distances between chord notes
    public String getChordFormula(){
        switch (Chord.getSelectedIndex()){
            case 1: return "43";
            case 2: return "34";
            case 3: return "433";
            case 4: return "434";
            case 5: return "343";
            case 6: return "334";
            case 7: return "432";
            case 8: return "342";
            case 9: return "33";
            case 10: return "333";
            case 11: return "44";
            case 12: return "442";
            case 13: return "52";
            case 14: return "25";
            case 15: return "7";
            default: return null;
        }
    }
   
    public void initializeNotes(){
        //each glowLabel matches to a note
        ArrayList<javax.swing.JLabel> glowLabels = new ArrayList<>();
       
        glowLabels.add(0, jLabel_C3_GLOW);
        glowLabels.add(1, jLabel_Db3_GLOW);
        glowLabels.add(2, jLabel_D3_GLOW);
        glowLabels.add(3, jLabel_Eb3_GLOW);
        glowLabels.add(4, jLabel_E3_GLOW);
        glowLabels.add(5, jLabel_F3_GLOW);
        glowLabels.add(6, jLabel_Gb3_GLOW);
        glowLabels.add(7, jLabel_G3_GLOW);
        glowLabels.add(8, jLabel_Ab3_GLOW);
        glowLabels.add(9, jLabel_A3_GLOW);
        glowLabels.add(10, jLabel_Bb3_GLOW);
        glowLabels.add(11, jLabel_B3_GLOW);
        glowLabels.add(12, jLabel_C4_GLOW);
        glowLabels.add(13, jLabel_Db4_GLOW);
        glowLabels.add(14, jLabel_D4_GLOW);
        glowLabels.add(15, jLabel_Eb4_GLOW);
        glowLabels.add(16, jLabel_E4_GLOW);
        glowLabels.add(17, jLabel_F4_GLOW);
        glowLabels.add(18, jLabel_Gb4_GLOW);
        glowLabels.add(19, jLabel_G4_GLOW);
        glowLabels.add(20, jLabel_Ab4_GLOW);
        glowLabels.add(21, jLabel_A4_GLOW);
        glowLabels.add(22, jLabel_Bb4_GLOW);
        glowLabels.add(23, jLabel_B4_GLOW);
        
        //each sound matches to a note
        soundFiles.add(0,"C3.wav");
        soundFiles.add(1, "Db3.wav");
        soundFiles.add(2,"D3.wav");
        soundFiles.add(3, "Eb3.wav");
        soundFiles.add(4,"E3.wav");
        soundFiles.add(5, "F3.wav");
        soundFiles.add(6, "Gb3.wav");
        soundFiles.add(7, "G3.wav");
        soundFiles.add(8, "Ab3.wav");
        soundFiles.add(9, "A3.wav");
        soundFiles.add(10, "Bb3.wav");
        soundFiles.add(11, "B3.wav");
        soundFiles.add(12, "C4.wav");
        soundFiles.add(13, "Db4.wav");
        soundFiles.add(14, "D4.wav");
        soundFiles.add(15, "Eb4.wav");
        soundFiles.add(16, "E4.wav");
        soundFiles.add(17, "F4.wav");
        soundFiles.add(18, "Gb4.wav");
        soundFiles.add(19, "G4.wav");
        soundFiles.add(20, "Ab4.wav");
        soundFiles.add(21, "A4.wav");
        soundFiles.add(22, "Bb4.wav");
        soundFiles.add(23, "B4.wav");
        
        //fill noteObjs with corresponding label and sound
        for (int index = 0; index < 24; index++)
        {
            Note n = new Note();
            n.setSoundFile(soundFiles.get(index));
            n.setGlowObject(glowLabels.get(index));
            noteObjs.add(index, n);
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Chord;
    private javax.swing.JButton ClearChords;
    private javax.swing.JButton Generate_Chord;
    private javax.swing.JButton Generate_Scale;
    private javax.swing.JButton jButton_A3;
    private javax.swing.JButton jButton_A4;
    private javax.swing.JButton jButton_Ab3;
    private javax.swing.JButton jButton_Ab4;
    private javax.swing.JButton jButton_B3;
    private javax.swing.JButton jButton_B4;
    private javax.swing.JButton jButton_Bb3;
    private javax.swing.JButton jButton_Bb4;
    private javax.swing.JButton jButton_C3;
    private javax.swing.JButton jButton_C4;
    private javax.swing.JButton jButton_CLEAR;
    private javax.swing.JButton jButton_D3;
    private javax.swing.JButton jButton_D4;
    private javax.swing.JButton jButton_Db3;
    private javax.swing.JButton jButton_Db4;
    private javax.swing.JButton jButton_E3;
    private javax.swing.JButton jButton_E4;
    private javax.swing.JButton jButton_Eb3;
    private javax.swing.JButton jButton_Eb4;
    private javax.swing.JButton jButton_F3;
    private javax.swing.JButton jButton_F4;
    private javax.swing.JButton jButton_G3;
    private javax.swing.JButton jButton_G4;
    private javax.swing.JButton jButton_Gb3;
    private javax.swing.JButton jButton_Gb4;
    private javax.swing.JComboBox<String> jComboBox_Key;
    private javax.swing.JComboBox<String> jComboBox_Scale;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel_A3_GLOW;
    private javax.swing.JLabel jLabel_A4_GLOW;
    private javax.swing.JLabel jLabel_Ab3_GLOW;
    private javax.swing.JLabel jLabel_Ab4_GLOW;
    private javax.swing.JLabel jLabel_B3_GLOW;
    private javax.swing.JLabel jLabel_B4_GLOW;
    private javax.swing.JLabel jLabel_Bb3_GLOW;
    private javax.swing.JLabel jLabel_Bb4_GLOW;
    private javax.swing.JLabel jLabel_C3_GLOW;
    private javax.swing.JLabel jLabel_C4_GLOW;
    private javax.swing.JLabel jLabel_D3_GLOW;
    private javax.swing.JLabel jLabel_D4_GLOW;
    private javax.swing.JLabel jLabel_Db3_GLOW;
    private javax.swing.JLabel jLabel_Db4_GLOW;
    private javax.swing.JLabel jLabel_E3_GLOW;
    private javax.swing.JLabel jLabel_E4_GLOW;
    private javax.swing.JLabel jLabel_Eb3_GLOW;
    private javax.swing.JLabel jLabel_Eb4_GLOW;
    private javax.swing.JLabel jLabel_ErrorMsg;
    private javax.swing.JLabel jLabel_F3_GLOW;
    private javax.swing.JLabel jLabel_F4_GLOW;
    private javax.swing.JLabel jLabel_G3_GLOW;
    private javax.swing.JLabel jLabel_G4_GLOW;
    private javax.swing.JLabel jLabel_Gb3_GLOW;
    private javax.swing.JLabel jLabel_Gb4_GLOW;
    private javax.swing.JLabel jLabel_NoteLabel_1;
    private javax.swing.JLabel jLabel_NoteLabel_2;
    private javax.swing.JLabel jLabel_NoteLabel_3;
    private javax.swing.JLabel jLabel_NoteLabel_4;
    private javax.swing.JLabel jLabel_NoteLabel_5;
    private javax.swing.JLabel jLabel_NoteLabel_6;
    private javax.swing.JLabel jLabel_NoteLabel_7;
    private javax.swing.JLabel jLabel_NoteLabel_8;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.ButtonGroup scaleOrChord;
    private javax.swing.JLabel waitLabel;
    // End of variables declaration//GEN-END:variables
    
    //arrays for use with building note objects
    private ArrayList<Note> noteObjs = new ArrayList<>();
    private ArrayList<String> soundFiles = new ArrayList<>();
    
    private boolean isDescending = false;
    
    //sets a custom jFrame icon 
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource
        ("/org/me/musicscalegenerator/images/logo.png")));
    }
}
